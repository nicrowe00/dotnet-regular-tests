on: 
  push:
    branches:
      - main
  pull_request_target:
    types: [opened, synchronize, reopened]

jobs:

  configure:
    name: Configure Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: set matrix
        id: set-matrix
        run: echo "matrix=$(jq -c . < ./matrix.json)" >> $GITHUB_OUTPUT
  
  testing-farm:
    name: Verify tests pass (tf)
    runs-on: ubuntu-latest
    needs: configure
    timeout-minutes: 60

    strategy:
        fail-fast: false
        matrix: ${{ fromJson(needs.configure.outputs.matrix) }}

    steps:
      - name: Get User Permission
        id: checkAccess
        uses: actions-cool/check-user-permission@v2
        with:
          require: write
          username: ${{ github.triggering_actor }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check User Permission
        if: steps.checkAccess.outputs.require-result == 'false'
        run: |
          echo "${{ github.triggering_actor }} does not have permissions on this repo."
          echo "Current permission level is ${{ steps.checkAccess.outputs.user-permission }}"
          echo "Job originally triggered by ${{ github.actor }}"
          exit 1

      - name: Check out code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Schedule tests on Testing Farm
        uses: sclorg/testing-farm-as-github-action@v3.1.2
        with:
          api_key: ${{ secrets.TF_API_KEY }}
          tmt_plan_regex: "ci"
          compose: ${{ matrix.compose }}
          arch: ${{ matrix.arch }}
          variables: "dotnet_version=${{ matrix.dotnet_version }};arch=${{ matrix.arch }};REPO_URL=${{ github.event.repo.url }}/${{ github.repository }};REPO_NAME=${{ github.repository }};PR_NUMBER=${{ github.event.issue.number }}"
          tf_scope: private
